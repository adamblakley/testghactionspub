name: Plugin Release Workflow
on:
  workflow_dispatch:
    inputs:
      PLUGIN_NAME:
        description: 'Plugin to release. The name must match the plugin directory name in GitHub. Multiple plugins can be entered, separated by commas (freegeoip,jira,etc).'
        required: false
  pull_request:
    types: [closed]
    branches:
      - master

permissions:
  id-token: write
  contents: write
  actions: read

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        id: checkoutRepository
        uses: actions/checkout@v3
        with:
          fetch-depth: 5
          ref: "refs/heads/main"

      - name: Find the filename
        id: find-filename
        run: |
          # Navigate to the desired directory
          cd .github/workflows/builds

          # Use find to get the filename
          filename=$(find . -type f -maxdepth 1 | xargs basename)
          
          # Set the output variable for later use
          echo "RELEASE_ASSET=${filename}" >> $GITHUB_ENV
          echo "GIT_TAG=${filename%.tar.gz}" >> $GITHUB_ENV
          
      - name: Create release
        id: createRelease
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ env.GIT_TAG }}
          release_name: ${{ env.GIT_TAG }}
          body: |
            ${{ env.GIT_TAG }}
          draft: false
          prerelease: false

      - name: Upload release asset
        id: uploadReleaseAsset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.createRelease.outputs.upload_url }}
          asset_path: .github/workflows/builds/${{ env.RELEASE_ASSET }}
          asset_name: ${{ env.RELEASE_ASSET }}
          asset_content_type: application/gzip
